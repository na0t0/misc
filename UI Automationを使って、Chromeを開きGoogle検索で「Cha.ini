UI Automationを使って、Chromeを開きGoogle検索で「ChatGTP」を検索するPowershellスクリプトを作ってください。

＝＝＝

# UI Automationをインポート
Add-Type -AssemblyName UIAutomationClient

# Chromeを開く
$chromeProcess = Start-Process "chrome.exe" -PassThru

# Chromeのウィンドウが表示されるまで待つ
$chromeWindow = $null
while ($chromeWindow -eq $null) {
    Start-Sleep -Milliseconds 100
    $chromeWindow = Get-UIElement -Process $chromeProcess -ControlType Window
}

# Google検索ページを開く
$chromeWindow.SetFocus()
$chromeWindow.SendKeys("https://www.google.com/")
$chromeWindow.SendKeys("{ENTER}")

# Google検索ページが表示されるまで待つ
$googleWindow = $null
while ($googleWindow -eq $null) {
    Start-Sleep -Milliseconds 100
    $googleWindow = Get-UIElement -Process $chromeProcess -ControlType Window -Name "Google"
}

# 検索ボックスを取得して、"ChatGPT"を入力する
$searchBox = Get-UIElement -Parent $googleWindow -ControlType Custom -Name "検索"
$searchBox.SetFocus()
$searchBox.SendKeys("ChatGPT")
$searchBox.SendKeys("{ENTER}")

# UI Automationを使用してUI要素を検索する関数
function Get-UIElement {
    param (
        [Parameter(Mandatory = $true)]
        $Process,
        [Parameter(Mandatory = $false)]
        $ControlType,
        [Parameter(Mandatory = $false)]
        [string]$Name
    )

    $Condition = New-Object UIAutomationClient.AndCondition(
        (New-Object UIAutomationClient.PropertyCondition([UIAutomationClient.AutomationElement]::ProcessIdProperty, $Process.Id)),
        (New-Object UIAutomationClient.PropertyCondition([UIAutomationClient.AutomationElement]::IsControlElementProperty, $true))
    )

    if ($ControlType) {
        $Condition = New-Object UIAutomationClient.AndCondition(
            $Condition,
            (New-Object UIAutomationClient.PropertyCondition([UIAutomationClient.AutomationElement]::ControlTypeProperty, $ControlType))
        )
    }

    if ($Name) {
        $Condition = New-Object UIAutomationClient.AndCondition(
            $Condition,
            (New-Object UIAutomationClient.PropertyCondition([UIAutomationClient.AutomationElement]::NameProperty, $Name))
        )
    }

    $Element = [UIAutomationClient.AutomationElement]::RootElement.FindFirst([UIAutomationClient.TreeScope]::Descendants, $Condition)
    return $Element
}
